---
format: revealjs
self-contained: true
---

##  {background-image="img\\caratula.png" background-size="cover"}

## Introducción {.smaller background-color="#F2F2F2"}

El deterioro cognitivo leve (DCL) es una condición en la que las personas experimentan una disminución en sus habilidades cognitivas mayor a la esperada para su edad, sin que esto interfiera significativamente con su vida diaria. Aunque el DCL puede mantenerse estable durante años, es una señal de alerta porque puede progresar a enfermedades más graves, como la enfermedad de Alzheimer. El Alzheimer es la causa más común de demencia, se caracteriza por la acumulación de proteínas anormales en el cerebro, que dañan las neuronas y causan pérdida de memoria y otras capacidades cognitivas avanzadas. Estos cambios comienzan mucho antes de que los síntomas sean evidentes, por lo que la detección temprana es crucial.

## Preguntas de Investigación {.smaller background-color="#F2F2F2"}

Para nuestra investigación, vamos a abordar las siguientes preguntas clave:

#### Asociación con Patologías Neurodegenerativas:

-   ¿Cuáles de las variables morfológicas del cerebro están más asociadas con el DCL y el Alzheimer?

#### Predictores Demográficos:

-   ¿Qué características demográficas (como la edad y el sexo) pueden predecir los valores de estas variables morfológicas?

#### Impacto de la Tecnología:

-   ¿Hay alguna relación entre las características tecnológicas (como la marca del resonador y la intensidad del campo magnético) y las variables morfológicas que estamos interesados en estudiar?

## Abordaje {.smaller background-color="#F2F2F2"}

Para abordar este problema, primero realizaremos un análisis exploratorio de datos para entender mejor la distribución y las características de las variables disponibles. Posteriormente, utilizaremos un enfoque bayesiano en nuestro análisis para ajustar y comparar modelos para identificar las relaciones entre variables morfológicas del cerebro, características demográficas y el riesgo de desarrollar DCL o Alzheimer. Al evaluar la importancia de cada variable en la predicción de estas condiciones, podremos seleccionar el mejor modelo que represente los datos y las relaciones de manera más precisa. Nuestro objetivo final es mejorar nuestra comprensión de los factores que contribuyen al desarrollo de enfermedades neurodegenerativas.

## Descripción del Conjunto de Datos {.scrollable background-color="#F2F2F2"}

Utilizamos el conjunto de datos llamado `cerebros.csv`. Este conjunto incluye información de 128 pacientes que se sometieron a estudios de resonancia magnética en diferentes partes del mundo. Las variables en este conjunto de datos son:

-   **id**: Identificación del paciente.

-   **intensidad_campo**: Intensidad del campo magnético utilizado en la imagen (puede ser 3 T o 1.5 T). Sabemos que a mayor intensidad, se obtiene información más detallada de los pacientes.

-   **resonador_fab**: Marca del resonador (Phillips, Siemens, General Electric).

-   **edad**: Edad del paciente (en años).

-   **sexo**: Sexo del paciente.

-   **diag**: Diagnóstico, que puede ser HC (control sano), MCI (deterioro cognitivo leve) o AD (enfermedad de Alzheimer).

-   **lh_subcx_hippocampus_volume**: Es la medida del tamaño del hipocampo en el hemisferio izquierdo del cerebro (en mm³).

::: {layout-ncol="2"}
![Imagen 1: Hipocampo](img/Hipocampo.png){width="300"}

![Imagen 2: Hipocampo](img/Hipocampo2.png){width="300"}
:::

-   **xh_general_etiv_volume**: Volumen intracraneal. Es el volumen total dentro del cráneo, incluyendo el cerebro, el líquido cerebroespinal y otros componentes (en mm³).

![Imagen 3: Volumen intercraneal](img/cerebro.png){width="300"}

-   **lh_cortex_superiorfrontal_thickness**: Espesor de la corteza superior frontal. Es la medida del grosor de la corteza cerebral en la región superior del lóbulo frontal (en mm).

![Imagen 4: Corteza frontal superior](img/corteza_frontal_superior.png){width="300"}

-   **lh_cortex_fusiform_volume**: Volumen de la corteza fusiforme, una región del cerebro situada en el lóbulo temporal. (en mm³).

![Imagen 5: Corteza Fusiforme](img/fusiforme2.png){width="300"}

# Analisis Exploratorio {.smaller background-color="#F2F2F2"}

En primer instancia se realizo un `auto EDA` para elegir relaciones de interes y presentarlas con mayor profundidad. De alli surgió el interes en la variable/relaciones

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Carga de librerias
library(ggplot2)
library(patchwork)
library(readr)
library(rstan)
library(dplyr)
library(bayesplot)
library(tidybayes)
library(ggdist)
library(loo)
expit <- function(x) exp(x) / (1 + exp(x))
#carga de datos
df <- read_csv("data/cerebros.csv")
df$diag <- factor(df$diag, levels = c("HC", "MCI", "AD"))
```

```{r, echo=FALSE, warning=FALSE}
dist_edad <- ggplot(df) +
  aes(x = edad, y = ..density..) +
  geom_histogram(binwidth = 5, fill = "#53A6A6", alpha = 0.5) +
  geom_density(color = "#027368", size = 1) +
  labs(x = "Edad",
       y = "Densidad") +
  theme(plot.caption = element_text(hjust = 0))

edad_diag <- ggplot(df)+
  aes(x=edad, y= diag, fill=diag)+
  geom_boxplot()+
  labs(x = "Edad",
       y = "",
       fill = "Diagnóstico") +
  theme(plot.caption = element_text(hjust = 0))+
  scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))

hipo_diag <- ggplot(df)+
  aes(y = diag, x = lh_subcx_hippocampus_volume, fill=diag) +
  geom_boxplot( outlier.shape = NA) +
  labs(x = "Volumen de Hipocampo",
       y = "",
       fill = "Diagnóstico") +
   scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))+
  theme(plot.caption = element_text(hjust = 0))

dist_edad+edad_diag/hipo_diag&plot_annotation(caption = "Gráfico 1: Exploratorio de edad")&
  theme(plot.caption = element_text(hjust = 0))
```

## Analisis Exploratorio {background-color="#F2F2F2"}

```{r, echo=FALSE, fig.width=10, fig.height=9, fig.align='center'}
g1 <- ggplot(df)+
  aes(x=edad, y=lh_subcx_hippocampus_volume,color=sexo)+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color = "#027368")+
  labs(x = "", y = "Vol. Hipocampo")

g2 <- ggplot(df)+
  aes(x=edad, y=lh_cortex_superiorfrontal_thickness,color=sexo)+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color = "#027368")+
  labs(x = "", y = "Espesor corteza sup. frontal")
g3 <- ggplot(df)+
  aes(x=edad, y=lh_cortex_fusiform_volume,color=sexo)+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color = "#027368")+
  labs(x = "Edad", y = "Vol. Corteza fusiforme")

g4 <- ggplot(df)+
  aes(x=edad, y=xh_general_etiv_volume,color=sexo)+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color = "#027368")+
  labs(x = "Edad", y = "Vol. Corteza fusiforme")

g1/g2/g3/g4/plot_annotation(caption = "Gráfico 2: Edad vs cuantitativas")&
  theme(plot.caption = element_text(hjust = 0))
```

## Analisis Exploratorio {background-color="#F2F2F2"}

```{r, echo=FALSE, fig.width=8, fig.height=6, fig.align='center'}
# Gráfico de barras apiladas
campo_res <- ggplot(df, aes(x = factor(intensidad_campo), fill = resonador_fab)) +
  geom_bar(position = "fill", width = 0.7) +
  labs(x = "Intensidad de Campo",
       y = "Proporción",
       fill = "Resonador") +
  scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))+
  theme(plot.caption = element_text(hjust = 0))

campo_diag <- ggplot(df, aes(x = factor(intensidad_campo), fill = diag)) +
  geom_bar(position = "fill", width = 0.7) +
  labs(x = "Intensidad de Campo",
       y = "Proporción",
       fill = "Diagnóstico") +
   scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))+
  theme(plot.caption = element_text(hjust = 0))

sex_diag <- ggplot(df, aes(x = sexo, fill = diag)) +
  geom_bar(position = "fill", width = 0.7) +
  labs(x = "",
       y = "Proporción",
       fill = "Diagnóstico") +
   scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))+
  theme(plot.caption = element_text(hjust = 0))

res_diag <- ggplot(df, aes(x = resonador_fab, fill = diag)) +
  geom_bar(position = "fill", width = 0.7) +
  labs(x = "",
       y = "Proporción",
       fill = "Diagnóstico") +
   scale_fill_manual(values = c("#BAD9D6", "#53A6A6", "#027368"))+
  theme(plot.caption = element_text(hjust = 0))

(campo_res+campo_diag)/(sex_diag+res_diag)/plot_annotation(caption = "Gráfico 3: Exploratorio categoricas")&
  theme(plot.caption = element_text(hjust = 0))
```

## Diagnóstico vs Fábrica del resonador {background-color="#F2F2F2"}

$H_0)$ Las dos variables categóricas son independientes. Esto significa que la distribución de una variable es la misma en todas las categorías de la otra variable.

$H_1)$ Las dos variables categóricas no son independientes. Esto significa que la distribución de una variable es diferente en al menos una categoría de la otra variable.

```{r}
contingency_table <- table(df$diag, df$resonador_fab)
# Realizar el test de Chi-cuadrado de independencia
chisq.test(contingency_table)
```

# Propuesta y ajuste de modelos {background-color="#F2F2F2"}

## Descripción matemática {background-color="#F2F2F2"}

Considerando que nuestro interes esta en explicar que variables muestran o dan indicio de predisposicion a desarrollar una enfermedad neurodegenerativa, analizaremos nuestra respuesta `enfermedad` como una variable binaria que toma el valor 1 si el paciente tiene una enfermedad, o 0 si su control resultó sano.

```{r}
df$enfermedad <- ifelse(df$diag=="HC",0,1)
summary(df$edad)
df <- df %>%
  mutate(
    menor_58 = ifelse(edad <= 58, 1, 0),
    menor_72 = ifelse((edad <= 72)&(edad > 58), 1, 0),
    menor_77 = ifelse((edad <= 77)&(edad > 72), 1, 0),
    mayor_77 = ifelse(edad > 77, 1, 0)
  )
sum(df$menor_58)
sum(df$menor_72)
sum(df$menor_77)
sum(df$mayor_77)
```

Modelaremos `enfermedad` como la respuesta de una regresión logística. Además, reescalamos algunas variables

Los modelos que nos ayudan a responder los objetivos son los siguientes.

## Modelado {.smaller background-color="#F2F2F2"}


seleccion de modelos con intervalo de credibilidad ver si cambian mucho los coeficientes modelo parsimonioso

### Variables demograficas:

$$Enfermedad_i | \pi_i \sim Bernoulli(\pi_i) $$

$$logit(\pi_i) = \beta_0 + \beta_1 . Edad_i + \beta_2 . Sexo_i$$ 

```{r}
df$sexo_idx <- as.numeric(as.factor(df$sexo)) #female = 1 y male=2

correr_modelos=FALSE
if(correr_modelos){
  # Definición de los datos para Stan
  stan_data <- list(
    N = nrow(df),
    menor_58 = df$menor_58,
    menor_72 = df$menor_72,
    menor_77 = df$menor_77,
    mayor_77 = df$mayor_77,
    sexo_idx = df$sexo_idx,
    y = df$enfermedad
  )
  
  stan_model <- stan( 
    file = "modelo_demograficas.stan", 
    data = stan_data,
    chains = 4,           # Cantidad de cadenas
    warmup = 400,         # Iteraciones de warmup
    iter = 2000,          # Iteraciones totales (warmup + sampleo)
    seed = 12119          # Para que el resultado sea reproducible
  )
  save(stan_model, file="modelo_demograficas_run.stan")
}
load("models/modelo_demograficas_run.stan")
stan_model

#traceplot(stan_model)
#pairs(stan_model)

mcmc_intervals(stan_model, pars = c("a","b1", "b2", "b3", "b4"))
```

de aca mas o menos lo que e ve e que edad si es significativa pero sexo no explica nada.

```{r}
y_rep_1 <- extract(stan_model, "y_rep")$y_rep
#y_rep_1[sample(2000, 200), ]
ppc_bars(df$enfermedad,y_rep_1[sample(2000, 200), ])
```


```{r}
# tiene sentido hacerlo?
loo_1demo <- loo(stan_model, pars = "log_likelihood")
loo_1
# load("")
# loo_2 <- loo(stan_model, pars = "log_likelihood")
# loo_2
# loo_com
```

```{r}
#stan_model

df_draws <- as.data.frame(extract(stan_model)) # tomo las muestras en un df
df_draws_long <- tidyr::pivot_longer(df_draws, c("a", "b1", "b2", "b3", "b4"), names_to = "param") #pivoteo la tabla


ggplot(df_draws_long) +
  geom_histogram(aes(x = value), bins = 30, fill = "darkcyan") +
  labs(x = "Valor", y = NULL) +
  facet_wrap(~ param, ncol = 2, scales = "free") +
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())
```

```{r}
#mean(df_draws$a < 0)
eta_e1<- df_draws$a  + df_draws$b1
eta_e2<- df_draws$a  + df_draws$b2
eta_e3<- df_draws$a  + df_draws$b3
eta_e4<- df_draws$a  + df_draws$b4

pi_e1 <- expit(eta_e1)
pi_e2 <- expit(eta_e2)
pi_e3 <- expit(eta_e3)
pi_e4 <- expit(eta_e4)

p_e1 <- data.frame(x = pi_e1) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Menor 58)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_e2 <- data.frame(x = pi_e2) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Entre 58 y 72)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_e3 <- data.frame(x = pi_e3) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Entre 72 y 77)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_e4 <- data.frame(x = pi_e4) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Mayor a 77)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

(p_e1+p_e2)/(p_e3+p_e4)/plot_annotation(caption = "")&
  theme(plot.caption = element_text(hjust = 0))

```
TODO: graficos de ppcheck

```{r}
# calcular_eta <- function(pars, x) {
#     intercepto <- pars[1]
#     pendiente <- pars[2]
#     intercepto + pendiente * x
# }
# 
# n_seq <- 100
# n_draws <- 6400
# edad_seq <- seq(20, 90, length.out = n_seq)
# 
# # (100, 4000)
# eta_matrix <- apply(df_draws[c("a", "b1")],  1, calcular_eta, x = edad_seq)
# 
# 
# df_lines <- data.frame(
#     eta = abs(as.vector(eta_matrix)),
#     edad = rep(edad_seq, n_draws),
#     draw = rep(seq_len(n_draws), each = n_seq)
# )
# 
# head(df_lines)
# library(ggdist)
# df_lines |>
#   ggplot(aes(x = edad, y = expit(eta))) +
#   stat_lineribbon(aes(fill_ramp = after_stat(level)), fill = "cyan", color = "grey20") + 
#   labs(x = "Edad", y = "Predictor lineal") +
#   theme_bw() +
#   theme(legend.position = "none")

```



### Variables tecnologicas:

$$Enfermedad_i | \pi_i \sim Bernoulli(\pi_i) $$ 
$$logit(\pi_i) = \beta_0 Intensidad1.5 + \beta_1 . Intensidad3_i + \beta_2 . Phillips_i + \beta_3 . Siemens_i$$

```{r}
df$resonador_idx <- as.numeric(as.factor(df$resonador_fab)) # 1 = GE, 2=Phillips, 3=Siemens
df$teslas_idx <- ifelse(df$intensidad_campo == 1.5, 1, 2)  # 1 para 1.5T, 2 para 3T

correr_modelos=FALSE
if(correr_modelos){
  # Definición de los datos para Stan
  stan_data <- list(
    N = nrow(df),
    teslas_idx = df$teslas_idx,
    resonador_idx = df$resonador_idx,
    y = df$enfermedad
    )
  
  stan_model <- stan( 
    file = "models/modelo_tecnologicas.stan", 
    data = stan_data,
    chains = 4,           # Cantidad de cadenas
    warmup = 500,         # Iteraciones de warmup
    iter = 5000,          # Iteraciones totales (warmup + sampleo)
    seed = 12119          # Para que el resultado sea reproducible
  )
  save(stan_model, file="modelo_tecnologicas_ambas.stan")
}
load("models/modelo_tecnologicas_intensidad.stan")
stan_model

# Visualizar trazas de las cadenas
traceplot(stan_model)
# Pares de parámetros para detectar correlaciones
pairs(stan_model)

#mcmc_intervals(stan_model, pars = c("a[1]", "a[2]", "a[3]", "b[1]", "b[2]"))
mcmc_intervals(stan_model, pars = c("b[1]", "b[2]"))
```

```{r}
y_rep_1 <- extract(stan_model, "y_rep")$y_rep
#y_rep_1[sample(2000, 200), ]
ppc_bars(df$enfermedad,y_rep_1[sample(2000, 200), ])
```

Entendemos que hay mas resonadores de 3t marca siemmens, y que las personas viejas no pueden usar 3t por tema implantes y demas, por eso vemos una relacion entre la enfermedad y la intensidad del campo o la marca del resonador.

```{r}
# tiene sentido hacerlo?
load("models/modelo_tecnologicas_run.stan") # solo marca
loo_1tec <- loo(stan_model, pars = "log_likelihood")
loo_1tec
load("models/modelo_tecnologicas_intensidad.stan") # solo intensidad
loo_2tec <- loo(stan_model, pars = "log_likelihood")
loo_2tec
load("models/modelo_tecnologicas_ambas.stan") # amabs
loo_3tec <- loo(stan_model, pars = "log_likelihood") 
loo_3tec

loo_compare(loo_1tec,loo_2tec,loo_3tec)
```
Los modelos son iguales, nos quedamos con intensidad

```{r}
load("models/modelo_tecnologicas_intensidad.stan") # solo intensidad
df_draws <- as.data.frame(extract(stan_model)) # tomo las muestras en un df
df_draws_long <- tidyr::pivot_longer(df_draws, c("b.1", "b.2"), names_to = "param") #pivoteo la tabla


ggplot(df_draws_long) +
  geom_histogram(aes(x = value), bins = 30, fill = "darkcyan") +
  labs(x = "Valor", y = NULL) +
  facet_wrap(~ param, ncol = 2, scales = "free") +
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())
```
```{r}
#mean(df_draws$a < 0)
eta_15<- df_draws$b.1 # + df_draws$a.1 +df_draws$a.3
eta_3<- df_draws$b.2 
#eta_siem<- df_draws$a.3 
pi_15 <- expit(eta_15)
pi_3 <- expit(eta_3)
#pi_siem <- expit(eta_siem)
p_15 <- data.frame(x = pi_15) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Si se uso resonador de 1.5 T)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_3 <- data.frame(x = pi_3) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Si se uso resonador de 3 T)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_15/p_3/plot_annotation(caption = "")&
  theme(plot.caption = element_text(hjust = 0))

```

TODO: razones de odds y ppchecks


### Variables morfologicas:

$$Enfermedad_i | \pi_i \sim Bernoulli(\pi_i) $$

$logit(\pi_i) = \beta_0 + \beta_1 . \text{Vol Hipocampo}_i + \beta_2 . \text{Espesor Corteza Sup Frontal}_i + \beta_3. \text{Vol Corteza Fusiforme}_i + \beta_4. \text{Vol Intracraneal}_i$

```{r}
df$fusiforme_norm <- ((df$lh_cortex_fusiform_volume)-mean(df$lh_cortex_fusiform_volume))/sd(df$lh_cortex_fusiform_volume)
df$hipocampo_norm <- ((df$lh_subcx_hippocampus_volume)-mean(df$lh_subcx_hippocampus_volume))/sd(df$lh_subcx_hippocampus_volume)
df$intercraneal_norm <- ((df$xh_general_etiv_volume)-mean(df$xh_general_etiv_volume))/sd(df$xh_general_etiv_volume)
df$sup_frontal_norm <- ((df$lh_cortex_superiorfrontal_thickness)-mean(df$lh_cortex_superiorfrontal_thickness))/sd(df$lh_cortex_superiorfrontal_thickness)


# mean(df$xh_general_etiv_volume[df$enfermedad==1])
# mean(df$xh_general_etiv_volume[df$enfermedad==0])

correr_modelos=FALSE
if(correr_modelos){
  # Definición de los datos para Stan
  stan_data <- list(
    N = nrow(df),
    hipocampo = df$hipocampo_norm ,       
    intercraneal = df$intercraneal_norm,
    fusiforme = df$fusiforme_norm, #no sig con la otras en el modelo
    sup_frontal = df$sup_frontal_norm,
    y = df$enfermedad
    )
  
  stan_model <- stan( 
    file = "modelo_morfologicas.stan", 
    data = stan_data,
    chains = 4,           # Cantidad de cadenas
    warmup = 500,         # Iteraciones de warmup
    iter = 5000,          # Iteraciones totales (warmup + sampleo)
    seed = 12119          # Para que el resultado sea reproducible
  )
  save(stan_model, file="modelo_morfologicas_a14.stan")
}
load("models/modelo_morfologicas_a14.stan")
#stan_model

# Visualizar trazas de las cadenas
#traceplot(stan_model)
# Pares de parámetros para detectar correlaciones
#pairs(stan_model)
mcmc_intervals(stan_model, pars = c("a","b1", "b4"))

```

```{r}
y_rep_1 <- extract(stan_model, "y_rep")$y_rep
#y_rep_1[sample(2000, 200), ]
ppc_bars(df$enfermedad,y_rep_1[sample(2000, 200), ])

```


```{r}
load("models/modelo_morfologicas_a14.stan")
loo_1morf <- loo(stan_model, pars = "log_likelihood")
loo_1morf
load("models/modelo_morfologicas_a124yrep.stan")
loo_2morf <- loo(stan_model, pars = "log_likelihood")
loo_2morf
loo_compare(loo_1morf,loo_2morf)
```
la dif entre modelos no es significativa, me quedo ocn el mas parsimonioso


```{r}
#stan_model

df_draws <- as.data.frame(extract(stan_model)) # tomo las muestras en un df
df_draws_long <- tidyr::pivot_longer(df_draws, c("a", "b1", "b4"), names_to = "param") #pivoteo la tabla


ggplot(df_draws_long) +
  geom_histogram(aes(x = value), bins = 30, fill = "darkcyan") +
  labs(x = "Valor", y = NULL) +
  facet_wrap(~ param, ncol = 2, scales = "free") +
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())
```



```{r, out.height=4}
#mean(df_draws$a < 0)

eta_morf_bajos<- df_draws$a + 
          df_draws$b1 * quantile(df$hipocampo_norm, .25) + 
          df_draws$b4* quantile(df$sup_frontal_norm, .25)
eta_morf_altos<- df_draws$a + 
          df_draws$b1 * quantile(df$hipocampo_norm, .75) + 
          df_draws$b4* quantile(df$sup_frontal_norm, .75)
pi_morf_bajos <- expit(eta_morf_bajos)
pi_morf_altos <- expit(eta_morf_altos)

p_bajos <- data.frame(x = pi_morf_bajos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | hipocampo y sup_frontal chicos)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_altos <- data.frame(x = pi_morf_altos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | hipocampo y sup_frontal grandes)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_bajos/p_altos/plot_annotation(caption = "")&
  theme(plot.caption = element_text(hjust = 0))
```

```{r}
eta_hipo_bajos<- df_draws$a + 
          df_draws$b1 * quantile(df$hipocampo_norm, .25)
eta_hipo_altos<- df_draws$a + 
          df_draws$b1 * quantile(df$hipocampo_norm, .75) 
pi_hipo_bajos <- expit(eta_hipo_bajos)
pi_hipo_altos <- expit(eta_hipo_altos)

p_h_bajos <- data.frame(x = pi_hipo_bajos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Valores chicos de Vol. de hipocampo)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_h_altos <- data.frame(x = pi_hipo_altos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Valores grandes de Vol. de hipocampo)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())
###############
eta_sf_bajos<- df_draws$a + 
          df_draws$b4 * quantile(df$sup_frontal_norm, .25)
eta_sf_altos<- df_draws$a + 
          df_draws$b4 * quantile(df$sup_frontal_norm, .75) 
pi_sf_bajos <- expit(eta_sf_bajos)
pi_sf_altos <- expit(eta_sf_altos)

p_sf_bajos <- data.frame(x = pi_sf_bajos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo | Valores chicos de Corteza Sup. frontal)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())

p_sf_altos <- data.frame(x = pi_sf_altos) |> 
  ggplot() + 
  geom_histogram(aes(x = x), fill = "darkcyan")+#, bins = 30) +
  labs(x = "P(Enfermo |Valores grandes de Corteza Sup. frontal)", y = NULL) +
  scale_x_continuous(limits = c(0,1))+
  theme_bw() +
  theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())


(p_h_altos+p_h_bajos)/(p_sf_altos+p_sf_bajos)/plot_annotation(caption = "")&
  theme(plot.caption = element_text(hjust = 0))
```


# Conclusiones

```{r}
loo_1demo
loo_2tec
loo_1morf

loo_compare(loo_1demo, loo_2tec, loo_1morf)
```
el modelo de las morf es el que mejor explica.







